/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2025-05-29 13:06:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class processOrder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html lang=\"en-us\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("        <link rel=\"icon\" href=\"Images/Logo/CoNEX.svg\" type=\"image/svg+xml\">\n");
      out.write("        <title>Process Order | SIZZLING CONCERT</title>\n");
      out.write("        <style>\n");
      out.write("            .order-container {\n");
      out.write("                max-width: 800px;\n");
      out.write("                margin: 20px auto;\n");
      out.write("                padding: 30px;\n");
      out.write("                background: rgba(255, 255, 255, 0.95);\n");
      out.write("                border-radius: 10px;\n");
      out.write("                box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n");
      out.write("            }\n");
      out.write("            .order-details {\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("                color: #333;\n");
      out.write("            }\n");
      out.write("            .order-details h2 {\n");
      out.write("                color: #333;\n");
      out.write("                margin-bottom: 20px;\n");
      out.write("                border-bottom: 2px solid #e44d26;\n");
      out.write("                padding-bottom: 10px;\n");
      out.write("            }\n");
      out.write("            .order-info {\n");
      out.write("                display: grid;\n");
      out.write("                grid-template-columns: 150px 1fr;\n");
      out.write("                gap: 15px;\n");
      out.write("                margin-bottom: 20px;\n");
      out.write("                padding: 15px;\n");
      out.write("                background: #f9f9f9;\n");
      out.write("                border-radius: 8px;\n");
      out.write("            }\n");
      out.write("            .order-info label {\n");
      out.write("                font-weight: bold;\n");
      out.write("                text-align: right;\n");
      out.write("                color: #333;\n");
      out.write("                padding: 8px 0;\n");
      out.write("            }\n");
      out.write("            .order-info div {\n");
      out.write("                color: #333;\n");
      out.write("                padding: 8px 0;\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("            .payment-methods {\n");
      out.write("                margin-top: 30px;\n");
      out.write("                padding: 20px;\n");
      out.write("                background: #f9f9f9;\n");
      out.write("                border-radius: 8px;\n");
      out.write("            }\n");
      out.write("            .payment-methods h3 {\n");
      out.write("                color: #333;\n");
      out.write("                margin-bottom: 20px;\n");
      out.write("            }\n");
      out.write("            .payment-method {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("                border: 1px solid #ddd;\n");
      out.write("                padding: 15px;\n");
      out.write("                margin-bottom: 15px;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                cursor: pointer;\n");
      out.write("                transition: all 0.3s ease;\n");
      out.write("                background: white;\n");
      out.write("            }\n");
      out.write("            .payment-method:hover {\n");
      out.write("                border-color: #e44d26;\n");
      out.write("                background: #fff5f2;\n");
      out.write("            }\n");
      out.write("            .payment-method.selected {\n");
      out.write("                border-color: #e44d26;\n");
      out.write("                background: #fff5f2;\n");
      out.write("            }\n");
      out.write("            .payment-method img {\n");
      out.write("                width: 50px;\n");
      out.write("                height: 50px;\n");
      out.write("                object-fit: contain;\n");
      out.write("                margin-right: 15px;\n");
      out.write("            }\n");
      out.write("            .payment-method span {\n");
      out.write("                color: #333;\n");
      out.write("                font-size: 1.1em;\n");
      out.write("            }\n");
      out.write("            .total-amount {\n");
      out.write("                font-size: 1.5em;\n");
      out.write("                color: #e44d26;\n");
      out.write("                text-align: right;\n");
      out.write("                margin: 20px 0;\n");
      out.write("                padding: 30px;\n");
      out.write("                background: #fff5f2;\n");
      out.write("                border-radius: 8px;\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            .confirm-button {\n");
      out.write("                background: #e44d26;\n");
      out.write("                color: white;\n");
      out.write("                padding: 15px 30px;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                font-size: 1.2em;\n");
      out.write("                cursor: pointer;\n");
      out.write("                width: 100%;\n");
      out.write("                transition: background 0.3s ease;\n");
      out.write("                margin-top: 20px;\n");
      out.write("            }\n");
      out.write("            .confirm-button:hover {\n");
      out.write("                background: #c73e1d;\n");
      out.write("            }\n");
      out.write("            .ticket-count {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("                gap: 10px;\n");
      out.write("            }\n");
      out.write("            .ticket-count button {\n");
      out.write("                background: #e44d26;\n");
      out.write("                color: white;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                width: 35px;\n");
      out.write("                height: 35px;\n");
      out.write("                cursor: pointer;\n");
      out.write("                font-size: 1.5em;\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("                justify-content: center;\n");
      out.write("                padding: 0;\n");
      out.write("                line-height: 1;\n");
      out.write("                transition: background-color 0.3s ease;\n");
      out.write("            }\n");
      out.write("            .ticket-count button:hover {\n");
      out.write("                background: #c73e1d;\n");
      out.write("            }\n");
      out.write("            .ticket-count input {\n");
      out.write("                width: 60px;\n");
      out.write("                text-align: center;\n");
      out.write("                padding: 8px;\n");
      out.write("                border: 1px solid #ddd;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                font-size: 1.1em;\n");
      out.write("            }\n");
      out.write("            .ticket-count input::-webkit-outer-spin-button,\n");
      out.write("            .ticket-count input::-webkit-inner-spin-button {\n");
      out.write("                -webkit-appearance: none;\n");
      out.write("                margin: 0;\n");
      out.write("            }\n");
      out.write("            .content {\n");
      out.write("                padding: 20px;\n");
      out.write("                min-height: calc(100vh - 200px);\n");
      out.write("            }\n");
      out.write("            .form-group label {\n");
      out.write("                display: block;\n");
      out.write("                margin-bottom: 8px;\n");
      out.write("                color: #333;\n");
      out.write("                font-weight: 600;\n");
      out.write("                font-size: 16px;\n");
      out.write("            }\n");
      out.write("            .form-group input[type=\"text\"],\n");
      out.write("            .form-group input[type=\"email\"],\n");
      out.write("            .form-group input[type=\"tel\"] {\n");
      out.write("                width: calc(100% - 16px);\n");
      out.write("                padding: 12px 8px;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                border: 1px solid #ddd;\n");
      out.write("                background: rgba(255, 255, 255, 0.95);\n");
      out.write("                transition: border-color 0.3s ease, background-color 0.3s ease;\n");
      out.write("                font-size: 16px;\n");
      out.write("                color: #333;\n");
      out.write("            }\n");
      out.write("            .form-group input:focus {\n");
      out.write("                border-color: #ff4d4d;\n");
      out.write("            }\n");
      out.write("            .form-group input::placeholder {\n");
      out.write("                color: #666;\n");
      out.write("                opacity: 1;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"bg fill bg-fill bg-loaded\">\n");
      out.write("            <video autoplay muted loop id=\"video-bg\">\n");
      out.write("                <source src=\"videos/Honkai Star Rail Serval Trailer -  The Cusp of Ignition!.mp4\" type=\"video/mp4\">\n");
      out.write("                Your browser does not support the video tag.\n");
      out.write("            </video>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"navbar-pg\">\n");
      out.write("            <div class=\"header\">\n");
      out.write("                <img src=\"Images/Logo/CoNEX.svg\" alt=\"CoNEX Logo\" class=\"logo\">\n");
      out.write("                <ul class=\"ul-header-list\">\n");
      out.write("                    <li><a href=\"index.jsp\">Home</a></li>\n");
      out.write("                    <li><a href=\"Concert.jsp\">Concert</a></li>\n");
      out.write("                    <li><a href=\"News.jsp\">News</a></li>\n");
      out.write("                    <li><a href=\"About-Us.jsp\">About Us</a></li>\n");
      out.write("                    <li><a href=\"Order.jsp\" id=\"buy-now\">Buy one now!</a></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"content\">\n");
      out.write("            <div class=\"order-container\">\n");
      out.write("                <form id=\"orderForm\" method=\"POST\">\n");
      out.write("                    <div class=\"order-details\">\n");
      out.write("                        <h2>Order Confirmation</h2>\n");
      out.write("                        \n");
      out.write("                        ");

                        // Get parameters from the request
                        String title = request.getParameter("title");
                        String date = request.getParameter("date");
                        String location = request.getParameter("location");
                        String price = request.getParameter("price");
                        String artist = request.getParameter("artist");
                        String genre = request.getParameter("genre");
                        String ticketType = request.getParameter("ticketType");
                        String imageUrl = request.getParameter("imageUrl");
                        
                        // Calculate base price
                        double basePrice = 0;
                        try {
                            basePrice = Double.parseDouble(price != null ? price : "0");
                        } catch (NumberFormatException e) {
                            basePrice = 0;
                        }
                        int ticketCount = 1;
                        double totalPrice = basePrice * ticketCount;
                        
                        // Generate a simple unique ticket ID (for demonstration)
                        String ticketId = "TICKET-" + System.currentTimeMillis() + "-" + (int)(Math.random() * 10000);
                        
      out.write("\n");
      out.write("\n");
      out.write("                        <input type=\"hidden\" name=\"imageUrl\" value=\"");
      out.print( imageUrl != null ? imageUrl : "" );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"ticketId\" value=\"");
      out.print( ticketId );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"title\" value=\"");
      out.print( title );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"amount\" value=\"");
      out.print( (long)totalPrice );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"name\" value=\"");
      out.print( request.getParameter("customerName") );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"email\" value=\"");
      out.print( request.getParameter("customerEmail") );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"phone\" value=\"");
      out.print( request.getParameter("customerPhone") );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"artist\" value=\"");
      out.print( artist );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"genre\" value=\"");
      out.print( genre );
      out.write("\">\n");
      out.write("                        \n");
      out.write("\n");
      out.write("                        <div class=\"order-info\">\n");
      out.write("                            <label>Concert:</label>\n");
      out.write("                            <div>");
      out.print( title );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Artist:</label>\n");
      out.write("                            <div>");
      out.print( artist );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Genre:</label>\n");
      out.write("                            <div>");
      out.print( genre );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Date:</label>\n");
      out.write("                            <div>");
      out.print( date );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Location:</label>\n");
      out.write("                            <div>");
      out.print( location );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Ticket Type:</label>\n");
      out.write("                            <div>");
      out.print( ticketType != null ? ticketType : "Regular" );
      out.write("</div>\n");
      out.write("                            \n");
      out.write("                            <label>Price per Ticket:</label>\n");
      out.write("                            <div>Rp <span id=\"basePriceValue\">");
      out.print( price );
      out.write("</span></div>\n");
      out.write("                            \n");
      out.write("                            <label>Quantity:</label>\n");
      out.write("                            <div class=\"ticket-count\">\n");
      out.write("                                <button type=\"button\" id=\"decrementBtn\">-</button>\n");
      out.write("                                <input type=\"number\" id=\"ticketCountInput\" name=\"ticketCount\" value=\"1\" min=\"1\" max=\"2\" readonly>\n");
      out.write("                                <button type=\"button\" id=\"incrementBtn\">+</button>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <label>Total Amount:</label>\n");
      out.write("                            <div class=\"total-amount\">Rp <span id=\"totalPriceValue\">");
      out.print( (long)totalPrice );
      out.write("</span></div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"payment-methods\">\n");
      out.write("                            <h3>Select Payment Method</h3>\n");
      out.write("                            \n");
      out.write("                            <h4>Virtual Account</h4>\n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'BCA')\">\n");
      out.write("                                <img src=\"Images/Logo/BCA.png\" alt=\"BCA\">\n");
      out.write("                                <span>Bank Central Asia (BCA)</span>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'Mandiri')\">\n");
      out.write("                                <img src=\"Images/Logo/Mandiri.png\" alt=\"Mandiri\">\n");
      out.write("                                <span>Bank Mandiri</span>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'BNI')\">\n");
      out.write("                                <img src=\"Images/Logo/BNI.png\" alt=\"BNI\">\n");
      out.write("                                <span>Bank Negara Indonesia (BNI)</span>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'BRI')\">\n");
      out.write("                                <img src=\"Images/Logo/BRI.png\" alt=\"BRI\">\n");
      out.write("                                <span>Bank Rakyat Indonesia (BRI)</span>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <h4>E-Wallets (QRIS)</h4>\n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'QRIS')\">\n");
      out.write("                                <img src=\"Images/Logo/QRIS.png\" alt=\"QRIS\">\n");
      out.write("                                <span>QRIS (All E-Wallets)</span>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <div class=\"payment-method\" onclick=\"selectPayment(this, 'Gopay')\">\n");
      out.write("                                <img src=\"Images/Logo/GoPay.png\" alt=\"Gopay\">\n");
      out.write("                                <span>Gopay</span>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"user-details-form\">\n");
      out.write("                        <h3 style=\"color: #333;\">Your Information</h3>\n");
      out.write("\n");
      out.write("                        <input type=\"hidden\" name=\"title\" value=\"");
      out.print( title );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"date\" value=\"");
      out.print( date );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"location\" value=\"");
      out.print( location );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"price\" value=\"");
      out.print( basePrice );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"artist\" value=\"");
      out.print( artist );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"genre\" value=\"");
      out.print( genre );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"ticketType\" value=\"");
      out.print( ticketType );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"ticketCount\" id=\"hiddenTicketCount\" value=\"");
      out.print( ticketCount );
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"totalAmount\" id=\"hiddenTotalAmount\" value=\"");
      out.print( (long) totalPrice );
      out.write("\">\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"name\">Full Name:</label>\n");
      out.write("                            <input type=\"text\" id=\"name\" placeholder=\"Username/name\" name=\"name\" required>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"email\">Email:</label>\n");
      out.write("                            <input type=\"email\" id=\"email\" placeholder=\"Email@example.com\" name=\"email\" required>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"phone\">Phone Number:</label>\n");
      out.write("                            <input type=\"tel\" id=\"phone\" placeholder=\"0123456789\" name=\"phone\" required>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <input type=\"hidden\" name=\"paymentMethod\" id=\"selectedPaymentMethod\">\n");
      out.write("\n");
      out.write("                        <button type=\"submit\" class=\"confirm-button\">Proceed to Payment</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"footer\">\n");
      out.write("            <ul class=\"ul-footer-list\">\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>Developer</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li>Dani Adinugroho (FE/Server)</li>\n");
      out.write("                        <li>I Gede Hermawan (FE)</li>\n");
      out.write("                        <li>I Gede Fender (BE)</li>\n");
      out.write("                        <li>Rio Firman (BE)</li>\n");
      out.write("                        <li>Farandio Al-Khalid (BE)</li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>GitHub</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Dani</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Hermawan</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Fender</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Rio</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Farandio</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>Support</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li>\n");
      out.write("                            <a href=\"https://trakteer.id/HOTTORU\" target=\"_blank\">\n");
      out.write("                                <img src=\"Images/BGtest/Trakteer.png\" alt=\"Trakteer\"> Hottoru\n");
      out.write("                            </a>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("            <div class=\"footer-copyright\">\n");
      out.write("                <p>&copy; 2025 CoNEX. All rights reserved.</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("            // Initialize variables\n");
      out.write("            let selectedPayment = null;\n");
      out.write("            const orderForm = document.getElementById('orderForm');\n");
      out.write("            const ticketCountInput = document.getElementById('ticketCountInput');\n");
      out.write("            const hiddenTicketCountInput = document.getElementById('hiddenTicketCount');\n");
      out.write("            const totalPriceSpan = document.getElementById('totalPriceValue');\n");
      out.write("            const selectedPaymentMethodInput = document.getElementById('selectedPaymentMethod');\n");
      out.write("            const hiddenAmountInput = document.getElementById('hiddenTotalAmount');\n");
      out.write("            const basePriceSpan = document.getElementById('basePriceValue');\n");
      out.write("            const decrementBtn = document.getElementById('decrementBtn');\n");
      out.write("            const incrementBtn = document.getElementById('incrementBtn');\n");
      out.write("\n");
      out.write("            // Set initial hidden ticket count value\n");
      out.write("            hiddenTicketCountInput.value = ticketCountInput.value;\n");
      out.write("\n");
      out.write("            function updateTicketCount(change) {\n");
      out.write("                let value = parseInt(ticketCountInput.value) + change;\n");
      out.write("                // Enforce min (1) and max (2)\n");
      out.write("                value = Math.max(1, Math.min(2, value));\n");
      out.write("                ticketCountInput.value = value;\n");
      out.write("                hiddenTicketCountInput.value = value; // Update hidden input\n");
      out.write("                updateTotal();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function updateTotal() {\n");
      out.write("                const ticketCount = parseInt(ticketCountInput.value);\n");
      out.write("                const basePrice = parseFloat(basePriceSpan.textContent);\n");
      out.write("                const total = basePrice * ticketCount;\n");
      out.write("                totalPriceSpan.textContent = total.toLocaleString('id-ID');\n");
      out.write("                hiddenAmountInput.value = total; // Update hidden amount input\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function selectPayment(element, method) {\n");
      out.write("                // Remove selected class from all payment methods\n");
      out.write("                document.querySelectorAll('.payment-method').forEach(el => {\n");
      out.write("                    el.classList.remove('selected');\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                // Add selected class to clicked element\n");
      out.write("                element.classList.add('selected');\n");
      out.write("                \n");
      out.write("                // Set the selected payment method in the hidden input\n");
      out.write("                selectedPaymentMethodInput.value = method;\n");
      out.write("\n");
      out.write("                // Dynamically set the form action based on the selected method\n");
      out.write("                if (method === 'QRIS' || method === 'Gopay') { // Assuming Gopay also uses QR code flow\n");
      out.write("                    orderForm.action = 'create-qrcode'; // Should point to CreateQrCodeServlet\n");
      out.write("                } else { // Bank VA methods\n");
      out.write("                    orderForm.action = 'xendit-payment'; // Should point to XenditPaymentServlet\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // Ensure hidden ticket count is updated when input field changes manually\n");
      out.write("            ticketCountInput.addEventListener('change', function() {\n");
      out.write("                let value = parseInt(this.value);\n");
      out.write("                 // Enforce min (1) and max (2) on manual input\n");
      out.write("                value = Math.max(1, Math.min(2, value));\n");
      out.write("                this.value = value;\n");
      out.write("                hiddenTicketCountInput.value = value;\n");
      out.write("                updateTotal();\n");
      out.write("            });\n");
      out.write("\n");
      out.write("             // Prevent manual input exceeding max=\"2\"\n");
      out.write("             ticketCountInput.addEventListener('input', function() {\n");
      out.write("                let value = parseInt(this.value);\n");
      out.write("                if (value > 2) {\n");
      out.write("                    this.value = 2;\n");
      out.write("                    hiddenTicketCountInput.value = 2;\n");
      out.write("                    updateTotal();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Add event listener to the form submission\n");
      out.write("            orderForm.addEventListener('submit', function(event) {\n");
      out.write("                // Get customer details from input fields\n");
      out.write("                const customerName = document.getElementById('name').value;\n");
      out.write("                const customerEmail = document.getElementById('email').value;\n");
      out.write("                const customerPhone = document.getElementById('phone').value;\n");
      out.write("\n");
      out.write("                // Update hidden input fields with customer details\n");
      out.write("                document.querySelector('input[name=\"name\"]').value = customerName;\n");
      out.write("                document.querySelector('input[name=\"email\"]').value = customerEmail;\n");
      out.write("                document.querySelector('input[name=\"phone\"]').value = customerPhone;\n");
      out.write("\n");
      out.write("                // Ensure other hidden fields are up-to-date (though updateTotal should handle amount/ticketCount)\n");
      out.write("                updateTotal(); // Just to be safe\n");
      out.write("\n");
      out.write("                // The form will now submit with all necessary hidden fields populated\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            const basePrice = parseFloat(basePriceSpan.textContent);\n");
      out.write("\n");
      out.write("            function updateTotalPrice() {\n");
      out.write("                const ticketCount = parseInt(ticketCountInput.value);\n");
      out.write("                const totalPrice = basePrice * ticketCount;\n");
      out.write("                totalPriceSpan.textContent = totalPrice.toFixed(0); // Format as integer without decimal\n");
      out.write("                hiddenAmountInput.value = totalPrice; // Update the hidden input value\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            decrementBtn.addEventListener('click', () => {\n");
      out.write("                let count = parseInt(ticketCountInput.value);\n");
      out.write("                if (count > 1) {\n");
      out.write("                    ticketCountInput.value = count - 1;\n");
      out.write("                    updateTotalPrice();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            incrementBtn.addEventListener('click', () => {\n");
      out.write("                let count = parseInt(ticketCountInput.value);\n");
      out.write("                updateTicketCount(1);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Initial calculation on page load\n");
      out.write("            updateTotalPrice();\n");
      out.write("\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
