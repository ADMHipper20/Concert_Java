/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2025-05-29 13:06:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;

public final class Order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html lang=\"en-us\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("        <link rel=\"icon\" href=\"Images/Logo/CoNEX.svg\" type=\"image/svg+xml\">\n");
      out.write("        <title>Select Tickets | SIZZLING CONCERT</title>\n");
      out.write("        <style>\n");
      out.write("            .ticket-container {\n");
      out.write("                max-width: 800px;\n");
      out.write("                margin: 60px auto;\n");
      out.write("                padding: 20px;\n");
      out.write("                background: rgba(255, 255, 255, 0.95);\n");
      out.write("                border-radius: 10px;\n");
      out.write("                box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n");
      out.write("            }\n");
      out.write("            .ticket-options {\n");
      out.write("                display: grid;\n");
      out.write("                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n");
      out.write("                gap: 20px;\n");
      out.write("                margin: 20px 0;\n");
      out.write("            }\n");
      out.write("            .ticket-type {\n");
      out.write("                border: 2px solid #ddd;\n");
      out.write("                border-radius: 10px;\n");
      out.write("                padding: 20px;\n");
      out.write("                cursor: pointer;\n");
      out.write("                transition: all 0.3s ease;\n");
      out.write("            }\n");
      out.write("            .ticket-type:hover {\n");
      out.write("                border-color: #e44d26;\n");
      out.write("                transform: translateY(-5px);\n");
      out.write("            }\n");
      out.write("            .ticket-type.selected {\n");
      out.write("                border-color: #e44d26;\n");
      out.write("                background: #fff5f2;\n");
      out.write("            }\n");
      out.write("            .ticket-type h3 {\n");
      out.write("                color: #333;\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("            }\n");
      out.write("            .ticket-type .price {\n");
      out.write("                color: #e44d26;\n");
      out.write("                font-size: 1.5em;\n");
      out.write("                font-weight: bold;\n");
      out.write("                margin: 10px 0;\n");
      out.write("            }\n");
      out.write("            .ticket-type .features {\n");
      out.write("                list-style: none;\n");
      out.write("                padding: 0;\n");
      out.write("                margin: 15px 0;\n");
      out.write("            }\n");
      out.write("            .ticket-type .features li {\n");
      out.write("                margin: 5px 0;\n");
      out.write("                color: #666;\n");
      out.write("            }\n");
      out.write("            .ticket-type .features li:before {\n");
      out.write("                content: \"âœ“\";\n");
      out.write("                color: #e44d26;\n");
      out.write("                margin-right: 10px;\n");
      out.write("            }\n");
      out.write("            .continue-button {\n");
      out.write("                background: #e44d26;\n");
      out.write("                color: white;\n");
      out.write("                padding: 15px 30px;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                font-size: 1.2em;\n");
      out.write("                cursor: pointer;\n");
      out.write("                width: 100%;\n");
      out.write("                margin-top: 20px;\n");
      out.write("                transition: background 0.3s ease;\n");
      out.write("            }\n");
      out.write("            .continue-button:hover {\n");
      out.write("                background: #c73e1d;\n");
      out.write("            }\n");
      out.write("            .continue-button:disabled {\n");
      out.write("                background: #ccc;\n");
      out.write("                cursor: not-allowed;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"bg fill bg-fill bg-loaded\">\n");
      out.write("            <video autoplay muted loop id=\"video-bg\">\n");
      out.write("                <source src=\"videos/Honkai Star Rail Serval Trailer -  The Cusp of Ignition!.mp4\" type=\"video/mp4\">\n");
      out.write("                Your browser does not support the video tag.\n");
      out.write("            </video>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"navbar-pg\">\n");
      out.write("            <div class=\"header\">\n");
      out.write("                <img src=\"Images/Logo/CoNEX.svg\" alt=\"CoNEX Logo\" class=\"logo\">\n");
      out.write("                <ul class=\"ul-header-list\">\n");
      out.write("                    <li><a href=\"index.jsp\">Home</a></li>\n");
      out.write("                    <li><a href=\"Concert.jsp\">Concert</a></li>\n");
      out.write("                    <li><a href=\"News.jsp\">News</a></li>\n");
      out.write("                    <li><a href=\"About-Us.jsp\">About Us</a></li>\n");
      out.write("                    <li><a href=\"Order.jsp\" id=\"buy-now\">Buy one now!</a></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"content\">\n");
      out.write("            <div class=\"ticket-container\">\n");
      out.write("                <h2>Select Your Ticket Type</h2>\n");
      out.write("                \n");
      out.write("                ");

                // Get parameters from the request
                String title = request.getParameter("title");
                String date = request.getParameter("date");
                String location = request.getParameter("location");
                String artist = request.getParameter("artist");
                String genre = request.getParameter("genre");
                String basePrice = request.getParameter("price");
                
                // Calculate VIP price (50% more than regular)
                double regularPrice = 0;
                try {
                    regularPrice = Double.parseDouble(basePrice != null ? basePrice : "0");
                } catch (NumberFormatException e) {
                    regularPrice = 0;
                }
                double vipPrice = regularPrice * 1.5;
                
      out.write("\n");
      out.write("\n");
      out.write("                <div class=\"concert-info\" style=\"margin-bottom: 20px; padding: 15px; background: #f9f9f9; border-radius: 5px;\">\n");
      out.write("                    <div style=\"display: flex; gap: 20px; align-items: center;\">\n");
      out.write("                        <img src='");
      out.print( request.getContextPath() );
      out.write('/');
      out.print( request.getParameter("imageUrl") );
      out.write("' alt=\"");
      out.print( title );
      out.write("\" style=\"width: 200px; height: 200px; object-fit: cover; border-radius: 8px;\">\n");
      out.write("                        <div>\n");
      out.write("                            <h3 style=\"margin-bottom: 10px;\">");
      out.print( title );
      out.write("</h3>\n");
      out.write("                            <p><strong>Artist:</strong> ");
      out.print( artist );
      out.write("</p>\n");
      out.write("                            <p><strong>Date:</strong> ");
      out.print( date );
      out.write("</p>\n");
      out.write("                            <p><strong>Location:</strong> ");
      out.print( location );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"ticket-options\">\n");
      out.write("                    <div class=\"ticket-type\" data-type=\"Regular\" data-price=\"");
      out.print( regularPrice );
      out.write("\" onclick=\"selectTicketType(this)\">\n");
      out.write("                        <h3>Regular Ticket</h3>\n");
      out.write("                        <div class=\"price\">Rp ");
      out.print( String.format("%,.0f", regularPrice) );
      out.write("</div>\n");
      out.write("                        <ul class=\"features\">\n");
      out.write("                            <li>Standard seating</li>\n");
      out.write("                            <li>Access to main concert area</li>\n");
      out.write("                            <li>Basic amenities</li>\n");
      out.write("                            <li>Standard entry time</li>\n");
      out.write("                        </ul>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"ticket-type\" data-type=\"VIP\" data-price=\"");
      out.print( vipPrice );
      out.write("\" onclick=\"selectTicketType(this)\">\n");
      out.write("                        <h3>VIP Ticket</h3>\n");
      out.write("                        <div class=\"price\">Rp ");
      out.print( String.format("%,.0f", vipPrice) );
      out.write("</div>\n");
      out.write("                        <ul class=\"features\">\n");
      out.write("                            <li>Premium seating</li>\n");
      out.write("                            <li>Exclusive VIP area access</li>\n");
      out.write("                            <li>Complimentary refreshments</li>\n");
      out.write("                            <li>Early entry</li>\n");
      out.write("                            <li>Meet & Greet opportunity</li>\n");
      out.write("                            <li>Exclusive merchandise</li>\n");
      out.write("                        </ul>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <button class=\"continue-button\" onclick=\"continueToPayment()\" disabled>Continue to Payment</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"footer\">\n");
      out.write("            <ul class=\"ul-footer-list\">\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>Developer</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li>Dani Adinugroho (FE/Server)</li>\n");
      out.write("                        <li>I Gede Hermawan (FE)</li>\n");
      out.write("                        <li>I Gede Fender (BE)</li>\n");
      out.write("                        <li>Rio Firman (BE)</li>\n");
      out.write("                        <li>Farandio Al-Khalid (BE)</li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>GitHub</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Dani</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Hermawan</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Fender</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Rio</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/ADMHipper20\" target=\"_blank\">Farandio</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"name-category\">\n");
      out.write("                    <h4>Support</h4>\n");
      out.write("                    <ul class=\"name-list\">\n");
      out.write("                        <li>\n");
      out.write("                            <a href=\"https://trakteer.id/HOTTORU\" target=\"_blank\">\n");
      out.write("                                <img src=\"Images/BGtest/Trakteer.png\" alt=\"Trakteer\"> Hottoru\n");
      out.write("                            </a>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("            <div class=\"footer-copyright\">\n");
      out.write("                <p>&copy; 2025 CoNEX. All rights reserved.</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <script>\n");
      out.write("            let selectedTicketType = null;\n");
      out.write("            let selectedPrice = 0;\n");
      out.write("\n");
      out.write("            function selectTicketType(element) {\n");
      out.write("                // Remove selected class from all ticket types\n");
      out.write("                document.querySelectorAll('.ticket-type').forEach(ticket => {\n");
      out.write("                    ticket.classList.remove('selected');\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                // Add selected class to clicked ticket type\n");
      out.write("                element.classList.add('selected');\n");
      out.write("                selectedTicketType = element.getAttribute('data-type');\n");
      out.write("                selectedPrice = parseFloat(element.getAttribute('data-price'));\n");
      out.write("                \n");
      out.write("                // Enable continue button\n");
      out.write("                document.querySelector('.continue-button').disabled = false;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function continueToPayment() {\n");
      out.write("                if (!selectedTicketType) {\n");
      out.write("                    alert('Please select a ticket type');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // Redirect to process order page with all parameters\n");
      out.write("                const params = new URLSearchParams(window.location.search);\n");
      out.write("                params.set('ticketType', selectedTicketType);\n");
      out.write("                params.set('price', selectedPrice);\n");
      out.write("                // Make sure imageUrl is included\n");
      out.write("                const imageUrl = params.get('imageUrl');\n");
      out.write("                if (imageUrl) {\n");
      out.write("                    params.set('imageUrl', imageUrl);\n");
      out.write("                }\n");
      out.write("                window.location.href = 'processOrder.jsp?' + params.toString();\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
